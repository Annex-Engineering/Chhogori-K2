# This file has been created by Feb, of Annex Engineering, for the K2 3D Printer.
# Please change settings for your specific build or ensure you place your items in the same spots on the same MCU as I have.
# I've added as many options as I can think of for different displays as well as listed the available commands you can use via the terminal at the bottom of this configuration file.

#THIS CONFIG IS FOR A 250mm x 250mm x 250mm K1 PRINTER ONLY FOR THE SKR1.4 CONTROLLER
#PLEASE READ THE WHOLE CONFIG BEFORE ATTEMPTING TO DO ANYTHING
#CONNECTORS/PORTS ON THE CONTROLLERS ARE NOTED WITH COMMENTS FOR EACH LOCATION/INPUT/OUTPUT

#How do I upgrade to the latest software?
#The general way to upgrade is to ssh into the Raspberry Pi and run:
#cd ~/klipper
#git pull
#~/klipper/scripts/install-octopi.sh

#Then one can recompile and flash the micro-controller code. For example:
#make menuconfig
#make clean
#make
#sudo service klipper stop
#make flash FLASH_DEVICE=/dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
#sudo service klipper start

#However, it's often the case that only the host software changes. In this case, one can update and restart just the host software with:
#cd ~/klipper
#git pull
#sudo service klipper restart
#If after using this shortcut the software warns about needing to reflash the micro-controller or some other unusual error occurs, then follow the full upgrade steps outlined above. Note that the RESTART and FIRMWARE_RESTART g-code commands do not load new software - the above "sudo service klipper restart" and "make flash" commands are needed for a software change to take effect.


# use the following modifiers before the pin definition (ex: ^!ar99)
# ! 			invert the logic
# ^ 			activate 5v pullup (does not apply to all pins)
# mcu_name: 	use pins on additional MCU (ex: z:ar10)


# MCU XYE
[mcu] 
	#You will need to set this definition manually following the instructions in the line below
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
restart_method: command

# MCU Z
[mcu z] 
#	You will need to set this definition manually following the instructions in the line below
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
restart_method: command


#Printer Speeds and Accels
[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 2000 #change this to 7500 after commissioning
max_z_velocity: 30
max_z_accel: 100
square_corner_velocity: 5.0

#Gcode G2/G3 Arc Support
[gcode_arcs]
resolution: 0.1

#Input Shaper Settings
# you need to tune your printer for this, if your lazy you can use these values as a starting point
# [input_shaper]
# shaper_freq_x: 59 #(100*8)/13.5
# shaper_freq_y: 51 #(100*8)/15.75
# shaper_type: mzv


# Stepper Configs
[stepper_x]
# connected to SKR XYE - X Stepper
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
# connected to virtual endstop
endstop_pin: tmc2209_stepper_x:virtual_endstop 
position_min: 0
position_endstop: 260
position_max: 260
homing_speed: 50.0
homing_positive_dir: true

[stepper_x1]
# connected to SKR XYE - Y Stepper
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
# connected to virtual endstop
endstop_pin: tmc2209_stepper_x1:virtual_endstop 



[stepper_y]
# connected to SKR XYE - Z Stepper
step_pin: P0.22
dir_pin: !P2.11
enable_pin: !P0.21
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
# connected to virtual endstop
endstop_pin: tmc2209_stepper_y:virtual_endstop 
position_min: 0
position_endstop: 260
position_max: 260
homing_speed: 50.0
homing_positive_dir: true

[stepper_y1]
# connected to SKR XYE - E0 Stepper
step_pin: P2.13
dir_pin: !P0.11
enable_pin: !P2.12
# 20t Pulley, 2mm Pitch on a 0.9deg Motor
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400
# connected to virtual endstop
endstop_pin: tmc2209_stepper_y1:virtual_endstop 



[stepper_z]
# connected to SKR Z - X Stepper (Front Left Stepper, from top)
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
# Z Axis Steps per mm, uncomment out the step distance line for which motor/drive setup you are using
# SFU1204 Ballscrew attached to a 1.8 deg Motor
#rotation_distance: 16
#microsteps: 4
#full_steps_per_rotation: 200

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 13.7:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 137:10

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 10:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 10:1

# connected to SKR Z, Z Endstop
endstop_pin: z:P1.27
# offset for nozzle to bed off z switch
#	microswitch Pin Height off of the Bed
position_endstop: 0.000 #you'll need to measure this and set it, it controls your nozzle to bed offset
position_max: 220 #this is set here on purpose, your actual travel will vary based on spring compression holding the bed, adjust at your own risk
position_min: -5
homing_speed: 15.0
second_homing_speed: 5.0
homing_retract_dist: 10.0
homing_positive_dir: false
 
[stepper_z1]
# connected to SKR Z - Y Stepper (Rear Left Stepper, from top)
step_pin: z:P0.19
dir_pin: z:P0.20
enable_pin: !z:P2.8
# Z Axis Steps per mm, uncomment out the step distance line for which motor/drive setup you are using
# SFU1204 Ballscrew attached to a 1.8 deg Motor
#rotation_distance: 16
#microsteps: 4
#full_steps_per_rotation: 200

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 13.7:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 137:10

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 10:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 10:1
 
[stepper_z2]
# conected to SKR Z - E0 Stepper (Center Right Stepper (or on belted z, Rear Right), from top)
step_pin: z:P2.13
dir_pin: z:P0.11
enable_pin: !z:P2.12
# Z Axis Steps per mm, uncomment out the step distance line for which motor/drive setup you are using
# SFU1204 Ballscrew attached to a 1.8 deg Motor
#rotation_distance: 16
#microsteps: 4
#full_steps_per_rotation: 200

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 13.7:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 137:10

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 10:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 10:1

# [stepper_z3]
# conected to SKR Z - E1 Stepper (Front Right Stepper (Belted Z Only), from top) - uncomment block if needed
# step_pin: z:P1.15
# dir_pin: z:P1.14
# enable_pin: z:!P1.16
# Z Axis Steps per mm, uncomment out the step distance line for which motor/drive setup you are using
# SFU1204 Ballscrew attached to a 1.8 deg Motor
#rotation_distance: 16
#microsteps: 4
#full_steps_per_rotation: 200

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 13.7:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 137:10

# 20t Pulley, 3mm Pitch on a 1.8deg Motor with a 10:1 gearbox attached
#rotation_distance: 60
#microsteps: 4
#full_steps_per_rotation: 200
#gear_ratio: 10:1


# TMC Stepper Configurations for All Motors
[tmc2209 stepper_x]
# connected to SKR XYE - X Stepper
uart_pin: P1.10
interpolate: false
run_current: 0.8 
sense_resistor: 0.110
stealthchop_threshold: 0
# Place a jumper on the two pin header near the endstop for sensorless homing
diag_pin: P1.29 #connected to SKR XYE - X Stepper diagnostic pin
driver_SGTHRS: 115
# TMC driver custom tuning for LDO Motor
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 5
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

[tmc2209 stepper_x1]
# connected to SKR XYE - Y Stepper
uart_pin: P1.9
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
# Place a jumper on the two pin header near the endstop for sensorless homing
diag_pin: P1.28 #connected to SKR XYE - Y Stepper diagnostic pin
driver_SGTHRS: 115
# TMC driver custom tuning for LDO Motor
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 5
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

[tmc2209 stepper_y]
# connected to SKR XYE - E0 Stepper
uart_pin: P1.8
interpolate: false
run_current: 0.8 
sense_resistor: 0.110
stealthchop_threshold: 0
# Place a jumper on the two pin header near the endstop for sensorless homing
diag_pin: P1.27 #connected to SKR XYE - Z Stepper diagnostic pin
driver_SGTHRS: 115
# TMC driver custom tuning for LDO Motor
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 5
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36

[tmc2209 stepper_y1]
# connected to SKR XYE - E1 Stepper
uart_pin: P1.4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
# Place a jumper on the two pin header near the endstop for sensorless homing
diag_pin: P1.25 #connected to SKR XYE - E0 Stepper diagnostic pin
driver_SGTHRS: 115
# TMC driver custom tuning for LDO Motor
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 5
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
 
[tmc2209 stepper_z]
# conected to SKR Z - X Stepper (Front Left Stepper, from top)
uart_pin: z:P1.10
interpolate: true
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z1]
# conected to SKR Z - Y Stepper (Rear Left Stepper, from top)
uart_pin: z:P1.9
interpolate: true
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

[tmc2209 stepper_z2]
# conected to SKR Z - E0 Stepper (Center Right Stepper (or on belted z, Rear Right), from top)
uart_pin: z:P1.4
interpolate: true
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0

# [tmc2209 stepper_z3]
# # conected to SKR Z - E1 Stepper (Front Right Stepper (Belted Z Only), from top) - uncomment block if needed
# uart_pin: z:P1.1
# interpolate: true
# run_current: 0.7
# sense_resistor: 0.110
# stealthchop_threshold: 0

[tmc2209 extruder]
# conected to SKR XYE - E1 Stepper
uart_pin: P1.1
interpolate: true
run_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0



# Force Move
#	used to force a single stepper to move.  not used once setup
#[force_move]
#enable_force_move: true

#	Enable Pause/Resume Functionality
[pause_resume]


# Probe
[probe]
# connected to SKR XYE - Z Endstop
endstop_pin: P1.27
x_offset: 21.3 # offset for microswitch probe x direction off nozzle
y_offset: 21.3 # offset for microswitch probe y direction off nozzle
z_offset: 0.00 # offset for microswitch probe in z height, leave this set to zero
samples: 2
sample_retract_dist: 10.0
samples_result: average
samples_tolerance: 0.050
samples_tolerance_retries: 3
speed: 30


# Safe Z Home
# this allows you to home only z when the XY is already homed
[safe_z_home]
#home_xy_position: 1,1 # you'll need to change this to the home switch position, then uncomment the line
speed: 200.00
z_hop: 20.0
z_hop_speed: 20.0
move_to_previous: False

# Extruder0
[extruder]
# conected to SKR XYE - E1 Stepper
step_pin: P1.5
dir_pin: P1.4
enable_pin: !P1.16
rotation_distance: 22.67895 #for 5mm Shaft Driven Bondtech gearsets
gear_ratio: 5:1 #Sherpa Mini uses 5:1, Folded Ascender Use 40:1 or 20:1
microsteps: 16
full_steps_per_rotation: 200 #1.8 deg motor

#0.4mm Nozzle
nozzle_diameter: 0.400
#pressure_advance: 0.04665 
#pressure_advance_smooth_time: 0.040
filament_diameter: 1.750	
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 15000.0
max_extrude_cross_section: 20000.0


# connected to SKR XYE - HE0 Heater
heater_pin: P2.7
max_power: 1.0

# connected to SKR XYE - TH0
sensor_type: ATC Semitec 104GT-2
sensor_pin: P0.24

#0.4mm Nozzle Settings
smooth_time: 3.0
max_power: 1.0

#Hotend PID Settings
control: pid
pid_Kp: 32.426 
pid_Ki: 1.743
pid_Kd: 150.782

min_extrude_temp: 0
min_temp: 0
max_temp: 300


 
# Heated Bed  
[heater_bed]
# connected to SKR XYE - BED
heater_pin: P2.5
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
# connected to SKR XYE - HB Temp
sensor_pin: P0.25
smooth_time: 3.0

#Build Plate PID Settings
max_power: 0.60
control: pid
pid_Kp: 42.475 
pid_Ki: 1.395 
pid_Kd: 323.339
min_temp: 0
max_temp: 110


 
# Fans  
# Hotend Cooling Fan
[heater_fan my_nozzle_fan]
# connected to SKR XYE - FAN
pin: P2.3
max_power: 1.0
hardware_pwm: false
kick_start_time: 0.500
heater: extruder
heater_temp: 75.0
fan_speed: 1.00
 
# Print Cooling Fan
[fan]
# connected to SKR Z - FAN
pin: Z:P2.3
max_power: 1.0
hardware_pwm: false
kick_start_time: 0.500
kick_start_time: 0.500


# Mesh Bed Settings
[bed_mesh]
speed: 200
horizontal_move_z: 20.0
mesh_min: 40,40
mesh_max: 210,210
probe_count: 5,5
fade_start: 1
fade_end: 0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.1
relative_reference_index: 12  # ^^^because were measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = (probe point count)/2-1

# Z Tilt Bed Adjustment settings - Ballscrew Z - comment block if not needed
[z_tilt]
#z_positions: 0,0
#			 1,1
#			 2,2
#	You will need to set these yourself, based on offset from the nozzle to the shoulder bolt pivots under the gantry, you can then uncomment the lines above
#	To do this, put the gantry at 0,0 and measure the offset from the nozzle using a metric tape measure, place the coordinates into the lines above
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc.
points: 50,50
		50,200
		200,100
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates.
speed: 200
horizontal_move_z: 20.0
retries: 6
retry_tolerance: 0.005

# Z Tilt Bed Adjustment settings - Belted Z - uncomment block if needed
# [z tilt]
# #z_positions: 0,0
# #			 1,1
# #			 2,2
# #			 3,3
# #	You will need to set these yourself, based on offset from the nozzle to the shoulder bolt pivots under the gantry, you can then uncomment the lines above
# #	To do this, put the gantry at 0,0 and measure the offset from the nozzle using a metric tape measure, place the coordinates into the lines above
# #   A list of X,Y coordinates (one per line; subsequent lines
# #   indented) describing the location of each bed "pivot point". The
# #   "pivot point" is the point where the bed attaches to the given Z
# #   stepper. It is described using nozzle coordinates (the XY position
# #   of the nozzle if it could move directly above the point). The
# #   first entry corresponds to stepper_z, the second to stepper_z1,
# #   the third to stepper_z2, etc.
# points: 50,50
# 		50,200
# 		200,50
# 		200,200
# #   A list of X,Y coordinates (one per line; subsequent lines
# #   indented) that should be probed during a Z_TILT_ADJUST command.
# #   Specify coordinates of the nozzle and be sure the probe is above
# #   the bed at the given nozzle coordinates.
# speed: 200
# horizontal_move_z: 20.0
# retries: 6
# retry_tolerance: 0.005


# Fysetc Mini 12864Panel v2.1 (with neopixel backlight leds) Configuration 

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P1.30, EXP1_3=P1.18, EXP1_5=P1.20, EXP1_7=P1.22, EXP1_9=<GND>,
    EXP1_2=P0.28, EXP1_4=P1.19, EXP1_6=P1.21, EXP1_8=P1.23, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=P0.17, EXP2_3=P3.26, EXP2_5=P3.25, EXP2_7=P1.31, EXP2_9=<GND>,
    EXP2_2=P0.15, EXP2_4=P0.16, EXP2_6=P0.18, EXP2_8=<RST>, EXP2_10=<NC>
    # Pins EXP2_1, EXP2_6, EXP2_2 are also MISO, MOSI, SCK of bus "ssp0"

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2


[output_pin beeper]
pin: EXP1_1

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 0
initial_GREEN: 0.4
initial_BLUE: 0


# Motor and Heater Idle Timeout
[idle_timeout]
timeout: 6000


#	 Macros
#	macro to level the bed to the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
	BED_MESH_CLEAR
	M107
	G28 Z
	Z_TILT_ADJUST
	G28 Z
	
#	macro to level the bed to the gantry
[gcode_macro square_bed_to_gantry]
gcode:
	G32


#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start]
default_parameter_EXTRUDER: 230 #default for abs
default_parameter_BED: 110 #default for abs
gcode:
  print_start_1		;print start macro 1
  M140 S{BED}		;set bed temperature and wait
  M109 S{EXTRUDER}	;set hotend temperature and wait
  M190 S{BED}		;set bed temperature and do not wait
  print_start_2		;print start macro 3

[gcode_macro print_start_1]
gcode:
	M104 S0 #cancel set temp
	M107 #turn cooling fans off
	G21  # set units to mm
	G90  # use absolute coordinates
	T0  # select tool 0
	M83	# use relative extrusion
	G92 E0.0  # reset e count
	M220 S100 # reset speed multiplier
	# nozzle_brush_location	#move to nozzle scrubber bucket; set this location, then uncomment this line

[gcode_macro print_start_2]
gcode:
	#nozzle_clean		#clean nozzle; set this location, then uncomment this line	
	G28	Z				#home machine hot
	prime_line			#draw prime line in corner of bed
	
[gcode_macro prime_line]
gcode:
	G1 Z20 F6000
	G1 X5 Y5 F12000
	G1 Z0.5
	G1 Y45 E30 F100
	G1 Y60 E5 F100
	G1 E-0.25 F1800
	G1 X10 Y60 Z4 F3000
	G92 E0.0             ;set extruder to Zero
	
#    Use print_end for you slicer ending script    
[gcode_macro print_end]
gcode:
	G91  							#relative positioning
	G0 E-0.25 F4800  				#retract 5mm of filament
	G0 Z+1.0 X-2.0 Y-2.0 F20000  #short quick move to disengage from print
	G0 Z+10.0  F20000  			#move Z-Axis 10mm away from part

	G90  					#absolute positioning
	G0 X240 Y240 			#move gantry close to xy max
	G91  					#relative positioning
	G0 E10 F1800			#extrude filament to get better blob on end
	G0 E-0.25 F4800  		#retract additional filament to move out of melt zone

	G90 					#absolute positioning
	M104 S0  				#turn off hotend
	M140 S0  				#turn off heatbed
	M106 S0  				#shut off part cooling fans
	M84						#turn off motors
	clear_pause				#clear pause state encase it was enabled

#	Macro to execute when pausing printer
[gcode_macro print_pause]
gcode:
	PAUSE			#issue pause command
	M83				#relative extruder moves
	G1 E-0.5 F3600	#retract 10mm of filament
	G91 			#relative positioning
	G1 Z5 F3000 	#lift Z by 5mm
	G90				#absolute positioning

#	Macro to execute when resuming printer
[gcode_macro print_resume]
gcode:
	M83				#relative extruder moves
	G1 E0.5 F3600	#extrude 10mm of filament
	G91 			#relative positioning
	G1 Z-5 F3000 	#lower Z by 5mm
	G90				#absolute positioning
	RESUME			#move toolhead back to pause position

#	Notify when ABS Timer is complete
[delayed_gcode notify_chamber]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin Chamber Preheated")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Set Temps for chamber warmup when printing with abs 
[gcode_macro abs_warmup_temp]
default_parameter_TEMP: 110 #default for abs
gcode:
	G28							#home machine
	G0 X125 Y125 Z50 F3000		#move to center of bed
	M106 S255					#turn part cooling fan on to blow heat around chamber
	M190 S{TEMP}				#set bed temperature and wait
 	UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200

#	Notify when filament is unloaded and ready to reload
[delayed_gcode notify_extruder_reload]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin Ready to Load Filament")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro load_filament]
default_parameter_EXTRUDER: 230 #default for abs
gcode:
	turn_fans_off			#turn part cooling fans off
	G0 X240 Y10				#move to area where can easily load filament
	M109 S{EXTRUDER}		#set hotend temperature and wait
	M83						#relative positioning on extruder	
	G0 E600 F900  			#prime extruder
	#nozzle_clean			#scrub nozzle
	M109 S0					#turn off extruder
	UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10

#	Notify when filament is loaded
[delayed_gcode notify_extruder_load]
initial_duration: 0
gcode:
 {action_respond_info("action:prompt_begin FIlament is Loaded")}
 {action_respond_info("action:prompt_choice OK")}
 {action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro unload_filament]
default_parameter_EXTRUDER: 245 #default for abs
gcode:
	turn_fans_off			#turn part cooling fans off
	G0 X240 Y10				#move to area where can easily load filament
	M109 S{EXTRUDER}		#set hotend temperature and wait	
	M83						#relative positioning on extruder
	G0 E15 F1800			#extrude filament to get better blob on end
	G0 E-500 F4800  		#retract additional filament to move out of melt zone
	UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10

#	Scrubs the nozzle on the brass brush located in the build chamber   	
[gcode_macro nozzle_clean]
gcode:
	SAVE_GCODE_STATE NAME=clean_nozzle_state	#store current nozzle location
	nozzle_brush_location		#move to nozzle brush
	G91 						#relative positioning
	G0 Z-25.5 F3000				#move nozzle to end of brush and into bristles
    {% for n in range(6) %}
		nozzle_clean_path		#run macro for nozzle clean
    {% endfor %}
    G0 Z25.5 F3000				#move nozzle out of bristles
	G90
	RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1	#restore current nozzle location

#	Path that the nozzle cleaning macro will follow to clean nozzle (must be in relative coordinate gcode)  	
[gcode_macro nozzle_clean_path]
gcode:
	G0 Y+60 F9000				#scrub
	G0 Y-60 F9000				#scrub

#	Where to start the nozzle brush cleaning pattern  	
[gcode_macro nozzle_brush_location]
gcode:
	#G0 X70 Y250 Z25.0 F18000			#move to nozzle scrubber; set this location, then uncomment this line
