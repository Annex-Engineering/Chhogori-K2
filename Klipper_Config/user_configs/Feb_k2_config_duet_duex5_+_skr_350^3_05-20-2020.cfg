# This file has been created by "Volcom" for the K2 Printer running a Duet Wifi Board with a Duex5 and a SKR1.3 running TMC2209s
# Please change settings for your specific build or ensure you place your items in the same spots on the same MCU as I have.
# I've added as many options as I can think of for different displays as well as listed the available commands you can use via the terminal at the bottom of this configuration file.

#How do I upgrade to the latest software?
#The general way to upgrade is to ssh into the Raspberry Pi and run:
#cd ~/klipper
#git pull
#~/klipper/scripts/install-octopi.sh

#Then one can recompile and flash the micro-controller code. For example:
#make menuconfig
#make clean
#make
#sudo service klipper stop
#make flash FLASH_DEVICE=/dev/serial/by-id/ttyUSB0 (insert ID at end)
#sudo service klipper start

#However, it's often the case that only the host software changes. In this case, one can update and restart just the host software with:
#cd ~/klipper
#git pull
#sudo service klipper restart
#If after using this shortcut the software warns about needing to reflash the micro-controller or some other unusual error occurs, then follow the full upgrade steps outlined above. Note that the RESTART and FIRMWARE_RESTART g-code commands do not load new software - the above "sudo service klipper restart" and "make flash" commands are needed for a software change to take effect.

################################################################
#
# Duet specific install notes:
# Required hardware:
#
# - DuetWifi/DuetEthernet + likely a Duex board
# - Raspberry Pi 3 or higher
# - microUSB cable
#
# In it's current state, aMpeX's Duet port for Klipper requires a USB to serial adapter connected to the Duet's PanelDue connection.
# This may go away in the future but for now is still needed.
# 
# 1) Follow the standard Klipper install instructions (see: https://github.com/KevinOConnor/klipper/blob/master/docs/Installation.md)
#    During setup choose "SAM4e8e (Duet Wifi/Eth)" for the architecture and keep the default baud rate of 250000.
#    Stop after the "make menuconfig" step. Make sure the USB option is selected when making the file, not serial.
# 
# 2) To flash for your duet, connect the microUSB cable from your Pi to your Duet. 
#     - Hold the "ERASE" button on the Duet board for two seconds followed by "RESET".
#	  - obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#     - You should now be able to successfully run the flashing step:
#	 > make menuconfig
#	 > make clean
#	 > make
#	 > sudo service klipper stop
#	 > make flash FLASH_DEVICE=/dev/serial/by-id/usb-Klipper_sam4e8e_003136535353484E3032303337303634-if00
#	 > sudo service klipper start
#
# 3) Continue the Klipper install guide at step "Configuring OctoPrint to use Klipper"
# 4) Instead of using the "~/klipper/config/example.cfg" config in the guide, use this file instead.
# 5) Run "ls -l /dev/serial/by-id/" to find the ID of the USB device. Find it and update the value in this file's [mcu] section for "serial".
# 6) In Octoprint go to the Terminal and execute command "RESTART" followed by "STATUS". Either it will report that Klipper is ready or that you have problems to fix.
#
################################################################

# use the following modifiers before the pin definition (ex: ^!ar99)
# ! 			invert the logic
# ^ 			activate 5v pullup (does not apply to all pins)
# mcu_name: 	use pins on additional MCU (ex: z:ar10)


# MCU - Duet2 + Duex5
[mcu]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_sam4e8e_003136535353484E3032303337303634-if00
restart_method: command

# MCU - SKR1.3
[mcu skr]
#	obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1E50000CC0003AAFDBFB205CC02000F5-if00
restart_method: command

#virtual sdcard settings
#[virtual_sdcard]
#path: ~/.octoprint/uploads/

# Steppers
[stepper_x]
# connected to E0 Stepper on SKR1.3
step_pin: skr:P2.13
dir_pin: !skr:P0.11
enable_pin: !skr:P2.12
# 0.9deg - 200 steps per mm - 1/16 microstepping
step_distance: 0.005
# connected to Endstop Input X- on SKR1.3
endstop_pin: ^skr:P1.29
position_min: 0
position_endstop: 360
position_max: 360
homing_speed: 100.0
second_homing_speed: 3.0
homing_retract_dist: 3.0
homing_positive_dir: true
 
[tmc2209 stepper_x]
uart_pin: skr:P1.8
microsteps: 16
#stealthchop_threshold: 9999
interpolate: True
run_current: 0.7
sense_resistor: 0.110
 
[stepper_x1]
# connected to E1 Stepper on SKR1.3
step_pin: skr:P0.1
dir_pin: skr:P0.0
enable_pin: !skr:P0.10
# 0.9deg - 200 steps per mm - 1/16 microstepping
step_distance: 0.005

[tmc2209 stepper_x1]
uart_pin: skr:P1.1
microsteps: 16
#stealthchop_threshold: 9999
interpolate: True
run_current: 0.7
sense_resistor: 0.110
 

[stepper_y]
# connected to X Stepper on SKR1.3
step_pin: skr:P2.2
dir_pin: !skr:P2.6
enable_pin: !skr:P2.1
# 0.9deg - 200 steps per mm - 1/16 microstepping
step_distance: 0.005
# connected to Endstop Input Y- on SKR1.3
endstop_pin: ^skr:P1.27
position_min: 0
position_endstop: 0
position_max: 360
homing_speed: 100.0
second_homing_speed: 3.0
homing_retract_dist: 3.0
homing_positive_dir: false

[tmc2209 stepper_y]
uart_pin: skr:P1.17
microsteps: 16
#stealthchop_threshold: 9999
interpolate: True
run_current: 0.7
sense_resistor: 0.110

[stepper_y1]
# connected to Y Stepper on SKR1.3
step_pin: skr:P0.19
dir_pin: skr:P0.20
enable_pin: !skr:P2.8
# 0.9deg - 200 steps per mm - 1/16 microstepping
step_distance: 0.005


[tmc2209 stepper_y1]
uart_pin: skr:P1.15
microsteps: 16
#stealthchop_threshold: 9999
interpolate: True
run_current: 0.7
sense_resistor: 0.110



[stepper_z]
# connected to E2 Stepper on Duex(Front Left Stepper, from top)
step_pin: PD2
dir_pin: !PD28
enable_pin: !PC6
# 1.8deg - 800 steps per mm - 1/16 microstepping
step_distance: 0.00125
# connected to Z Endstop on Duet
endstop_pin: PD29

# offset for nozzle to bed off z switch
position_endstop: -0.2	#microswitch Height (further from 0 = closer to bed)
position_max: 300
position_min: -5
homing_speed: 10.0
second_homing_speed: 3.0
homing_retract_dist: 10.0
homing_positive_dir: false
 
[tmc2660 stepper_z]
cs_pin: PD23
spi_bus: usart1
microsteps: 16
interpolate: False
run_current: 0.7
sense_resistor: 0.051
 
[stepper_z1]
# connected to E3 Stepper on Duex (Rear Left Stepper, from top)
step_pin: PD1
dir_pin: !PD22
enable_pin: !PC6
# 1.8deg - 800 steps per mm - 1/16 microstepping
step_distance: 0.00125
 
[tmc2660 stepper_z1]
cs_pin: PD24
spi_bus: usart1
microsteps: 16
interpolate: False
run_current: 0.7
sense_resistor: 0.051
 
[stepper_z2]
# connected to E4 Stepper on Duex (Center Right Stepper, from top)
step_pin: PD0
dir_pin: !PD16
enable_pin: !PC6
# 1.8deg - 800 steps per mm - 1/16 microstepping
step_distance: 0.00125

[tmc2660 stepper_z2]
cs_pin: PD25
spi_bus: usart1
microsteps: 16
interpolate: False
run_current: 0.7
sense_resistor: 0.051
 


[sx1509 duex]
i2c_address: 62 #fixed on duex boards

[static_digital_output onboard_led]
pins: !PC2

# Force Move
#	used to force a single stepper to move.  not used once setup
[force_move]
enable_force_move: true

# Enable Pause/Resume Functionality
[pause_resume]

# Filament Switch Sensor.  
#	support for filament insert and runout detection using a switch sensor, such as an endstop switch.
[filament_switch_sensor my_sensor]
pause_on_runout: True
runout_gcode:
	M117 Runout Detected
	M600
	M400
event_delay: 3.0
pause_delay: 0.5
# connected to E1 Endstop on Duet
switch_pin: !PC16


# Probe
[probe]
# connected to E0 Endstop on Duet
pin: ^PD10
x_offset: 21.3 # offset for inductive probe x direction off nozzle
y_offset: 21.3 # offset for inductive probe y direction off nozzle
z_offset: 9.00 # offset for inductive probe in z height
samples: 2
sample_retract_dist: 5.0
samples_result: average
samples_tolerance: 0.050
samples_tolerance_retries: 3
speed: 15
lift_speed: 20
activate_gcode:
deactivate_gcode:

# Safe Z Home
# this allows you to home only z when the XY is already homed
[safe_z_home]
home_xy_position: 357.5,32
speed: 200.00
z_hop: 15.0
z_hop_speed: 15.0
move_to_previous: False

# Extruder0
[extruder]
# conected to Z Stepper on Duet
step_pin: PD8
dir_pin: !PD13 #inverted for BMG
enable_pin: !PC6
# LDO 0.9deg - 830 steps per mm - 1/16 microstepping -  BMG
step_distance: 0.00120481927


#0.4mm Nozzle
nozzle_diameter: 0.600
pressure_advance: 0.05
pressure_advance_smooth_time: 0.04
filament_diameter: 1.750	
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 120.0
max_extrude_only_accel: 15000.0
max_extrude_cross_section: 20000.0

# connected to Heater0 on Duet
heater_pin: !PA20
max_power: 1.0

# connected to Thermistor0 on Duet
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC15
smooth_time: 3.0

#0.4mm Nozzle Settings
smooth_time: 3.0
max_power: 1.0
control: pid
pid_Kp: 27.995
pid_Ki: 1.403
pid_Kd: 139.625
min_extrude_temp: 0
min_temp: 0
max_temp: 300

[verify_heater extruder]
hysteresis: 10
check_gain_time: 40
heating_gain: 2
max_error: 500

[tmc2660 extruder]
cs_pin: PC10
spi_bus: usart1
microsteps: 16
interpolate: True
run_current: 0.6
sense_resistor: 0.051

 
 
# Heated Bed  
[heater_bed]
# connected to Heater Bed on Duet
heater_pin: !PA19
# NTC 100K MGB18-104F39050L32 is for Kenovo thermistors
sensor_type: NTC 100K MGB18-104F39050L32
# connected to Thermistor Bed on Duet
sensor_pin: PC13
smooth_time: 3.0

#350mm Build Plate Settings
max_power: 0.60
control: pid
pid_Kp: 42.475 
pid_Ki: 1.395 
pid_Kd: 323.339

min_temp: 0
max_temp: 120

[verify_heater heater_bed]
hysteresis: 2.5
check_gain_time: 240

 
# Fans  
#	thermally controlled hotend fan
[heater_fan my_nozzle_fan]
# connected to Fan4 on Duex5 - 12v Fan
pin: sx1509_duex:PIN_7 
pwm: True
hardware_pwm: True
max_power: 1.0
kick_start_time: 0.500
heater: extruder
heater_temp: 75.0
fan_speed: 1.00
 
# print cooling fan
[fan]
# connected to Fan1 on Duex5 - 12 Fan
pin: sx1509_duex:PIN_12
pwm: True
hardware_pwm: True
max_power: 1.0
kick_start_time: 0.500


# Chamber Lighting
[output_pin chamber_lighting]
# connected to Heater1 on Duex
pin: !PA16
value: 0
shutdown_value: 0

# Chamber Temperature
#[temperature_sensor chamber_temp]
#sensor_type: NTC 100K beta 3950
# connected to Thermistor3 on Duex
#sensor_pin: PC29
#gcode_id: C


#Printer Controls
[printer]
kinematics: cartesian
max_velocity: 400
max_accel: 5000
max_z_velocity: 30
max_z_accel: 100
square_corner_velocity: 5.0

#Gcode G2/G3 Arc Support
[gcode_arcs]
resolution: 0.1

# Ringing Frequency: 41hz
; acceleration_order: 6
; min_jerk_limit_time: 0.025  # 1.0 / max_ringing_frequency, in sec, corresponds to 41 Hz

# Mesh Bed Settings
[bed_mesh]
speed: 300
horizontal_move_z: 15
mesh_min: 30,30
mesh_max: 320,320
probe_count: 5,5
fade_start: 1
fade_end: 0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.10
relative_reference_index: 12  # ^^^because were measuring the offset from the nozzle switch to the bed using the center of the bed, the equation to find the location = (probe point count)/2-1

# Z Tilt Bed Adjustment settings
[z_tilt]
z_positions: -73.82,23.32
			 -73.82,426.68
			 476.58,176.68
points: 50,50
		50,300
		300,175
speed: 200
horizontal_move_z: 15.0
retries: 6
retry_tolerance: 0.01


# Motor and Heater Idle Timeout
[idle_timeout]
gcode:
	#blank so it does nothing to the heaters or motors
timeout: 60

# Fysetc Mini 12864Panel v2.1 (with neopixel backlight leds) Configuration 
[display]
#  "mini12864 LCD Display
lcd_type: uc1701
cs_pin: skr:P1.18
a0_pin: skr:P1.19
encoder_pins: ^skr:P3.25,^skr:P3.26
click_pin: ^!skr:P0.28
contrast: 63
menu_timeout: 180

[output_pin beeper]
pin: skr:P1.30

[neopixel my_neopixel]
pin: skr:P1.21
chain_count: 3
#green
initial_RED: 1
initial_GREEN: 0
initial_BLUE: 0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The default for each color is 0


#	 Macros
#	macro to level the gantry.  use G32 in the terminal to call
[gcode_macro g32]
gcode:
	{% if printer.toolhead.status == "Ready" %}
		G28 Z
		M401
		BED_MESH_CLEAR
		M107
		Z_TILT_ADJUST
		G28 Z
		M402
	{% else %}
		{ printer.gcode.action_respond_info("G32 is disabled while printing!") }
	{% endif %}
	
#	macro to level the gantry quad z gantry
[gcode_macro square_bed_to_machine]
gcode:
	{% if printer.toolhead.status == "Ready" %}
		G32
	{% else %}
		{ printer.gcode.action_respond_info("Tri-Bed Leveling is disabled while printing!") }
	{% endif %}

#	mesh bed level the machine
[gcode_macro mesh_bed_level_machine]
gcode:
	{% if printer.toolhead.status == "Ready" %}
		M401
		BED_MESH_CALIBRATE	;Run Bed Mesh
		M402
	{% else %}
		{ printer.gcode.action_respond_info("Tri-Bed Leveling is disabled while printing!") }
	{% endif %}

#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start]
default_parameter_EXTRUDER: 250
default_parameter_BED: 110
gcode:
  print_start_1			;print start macro 1
  M140 S{BED}			;set bed temperature and wait
  M109 S{EXTRUDER}		;set hotend temperature and wait
  M190 S{BED}			;set bed temperature and do not wait
  print_start_2			;print start macro 2
  prime_line_regular	;draw prime line in corner of bed
  
#	combined print start gcode macro that takes into account temperature from the slicer
[gcode_macro print_start_kiss]
default_parameter_EXTRUDER: 250
default_parameter_BED: 110
gcode:
  print_start_1				;print start macro 1
  M140 S{BED}				;set bed temperature and wait
  M109 S{EXTRUDER}			;set hotend temperature and wait
  M190 S{BED}				;set bed temperature and do not wait
  print_start_2				;print start macro 2
  prime_line_kiss			;draw prime line in corner of bed

[gcode_macro print_start_1]
gcode:
	M104 S0 #cancel set temp
	M107 #turn cooling fans off
	G21  # set units to mm
	G90  # use absolute coordinates
	T0  # select tool 0
	M83	# use relative extrusion
	G92 E0.0  # reset e count
	M220 S100 # reset speed multiplier
	nozzle_brush_location	#move to nozzle scrubber bucket

[gcode_macro print_start_2]
gcode:
	nozzle_clean		#clean nozzle	
	G28	Z				#home machine hot
	
[gcode_macro prime_line_regular]
gcode:
	G1 Z20 F6000
	G1 X340 Y10 F12000
	G1 Z0.5
	G1 Y45 E30 F100
	G1 Y60 E5 F100
	G1 E-0.6 F1800
	G92 E0.0             ;set extruder to Zero
	
[gcode_macro prime_line_kiss]
gcode:
	G1 Z20 F6000
	G1 X340 Y10 F12000
	G1 Z0.5
	G1 Y45 E30 F100
	G1 Y60 E5 F100
	G1 E-0.6 F1800
	G1 X340 Y60 Z4 F3000
	G92 E0.0             ;set extruder to Zero
	
#    Use print_end for you slicer ending script    
[gcode_macro print_end]
gcode:
	G91  							#relative positioning
	G0 E-4.0 F4800  				#retract 5mm of filament
	G0 Z+1.00 X-2 Y-2 F20000  #short quick move to disengage from print
	G0 Z+10.00  F20000  			#move Z-Axis 10mm away from part

	G90  					#absolute positioning
	G0 X30 Y30 				#move gantry close to xy max
	G91  					#relative positioning
	G0 E10 F1800			#extrude filament to get better blob on end
	G0 E-4.00 F4800  		#retract additional filament to move out of melt zone

	G90 					#absolute positioning
	M104 S0  				#turn off hotend
	M140 S0  				#turn off heatbed
	M106 S0  				#shut off part cooling fans
	#M84					#turn off motors
	clear_pause				#clear pause state encase it was enabled

#	Macro to execute when pausing printer
[gcode_macro print_pause]
gcode:
	PAUSE			#issue pause command
	M83				#relative extruder moves
	G1 E-5 F3600	#retract 5mm of filament
	G91 			#relative positioning
	G1 Z10 F3000 	#lift Z by 10mm
	G90				#absolute positioning

#	Macro to execute when resuming printer
[gcode_macro print_resume]
gcode:
	M83				#relative extruder moves
	G1 E5 F3600	#extrude 5mm of filament
	G91 			#relative positioning
	G1 Z-10 F3000 	#lower Z by 10mm
	G90				#absolute positioning
	RESUME			#move toolhead back to pause position

#	Notify when ABS Timer is complete
[delayed_gcode notify_chamber]
initial_duration: 0
gcode:
 {printer.gcode.action_respond_info("action:prompt_begin Chamber Preheated")}
 {printer.gcode.action_respond_info("action:prompt_choice OK")}
 {printer.gcode.action_respond_info("action:prompt_show")}

#	Set Temps for chamber warmup when printing with abs 
[gcode_macro abs_warmup_temp]
default_parameter_TEMP: 110
gcode:
	{% if printer.toolhead.status == "Ready" %}
		G28							#home machine
		G0 X175 Y50 Z50 F3000		#move to center of bed
		M106 S255					#turn part cooling fan on to blow heat around chamber
		M190 S{TEMP}				#set bed temperature and wait
		UPDATE_DELAYED_GCODE ID=notify_chamber DURATION=1200
	{% else %}
		{ printer.gcode.action_respond_info("Chamber Warmup is disabled while printing!") }
	{% endif %}

#	Notify when filament is unloaded and ready to reload
[delayed_gcode notify_extruder_reload]
initial_duration: 0
gcode:
 {printer.gcode.action_respond_info("action:prompt_begin Ready to Load Filament")}
 {printer.gcode.action_respond_info("action:prompt_choice OK")}
 {printer.gcode.action_respond_info("action:prompt_show")}

#	Macro to Load Filament
[gcode_macro load_filament]
default_parameter_EXTRUDER: 255
gcode:
	{% if printer.toolhead.status == "Ready" %}
		turn_fans_off			#turn part cooling fans off
		G0 X340 Y10				#move to area where can easily load filament
		M109 S{EXTRUDER}		#set hotend temperature and wait
		M83						#relative positioning on extruder	
		G0 E120 F600  			#prime extruder
		M109 S0					#turn off extruder
		UPDATE_DELAYED_GCODE ID=notify_extruder_load DURATION=10
	{% else %}
		{ printer.gcode.action_respond_info("Load Filament is disabled while printing!") }
	{% endif %}

#	Notify when filament is loaded
[delayed_gcode notify_extruder_load]
initial_duration: 0
gcode:
 {printer.gcode.action_respond_info("action:prompt_begin FIlament is Loaded")}
 {printer.gcode.action_respond_info("action:prompt_choice OK")}
 {printer.gcode.action_respond_info("action:prompt_show")}

#	Macro to Unload Filament
[gcode_macro unload_filament]
default_parameter_EXTRUDER: 255
gcode:
	{% if printer.toolhead.status == "Ready" %}
		turn_fans_off			#turn part cooling fans off
		G0 X340 Y10				#move to area where can easily load filament
		M109 S{EXTRUDER}		#set hotend temperature and wait	
		M83						#relative positioning on extruder
		G0 E15 F1800			#extrude filament to get better blob on end
		G0 E-600 F1800  		#retract additional filament to move out of melt zone
		UPDATE_DELAYED_GCODE ID=notify_extruder_reload DURATION=10
	{% else %}
		{ printer.gcode.action_respond_info("Unload Filament is disabled while printing!") }
	{% endif %}

#	Scrubs the nozzle on the brass brush located in the build chamber   	
[gcode_macro nozzle_clean]
gcode:
	SAVE_GCODE_STATE NAME=clean_nozzle_state	#store current nozzle location
	nozzle_brush_location		#move to nozzle brush
	G91 						#relative positioning
	G0 Z-25 F3000				#move nozzle to end of brush and into bristles
    {% for n in range(6) %}
		nozzle_clean_path		#run macro for nozzle clean
    {% endfor %}
    G0 Z25 F3000				#move nozzle out of bristles
	G90
	RESTORE_GCODE_STATE NAME=clean_nozzle_state MOVE=1	#restore current nozzle location

#	Path that the nozzle cleaning macro will follow to clean nozzle (must be in relative coordinate gcode)  	
[gcode_macro nozzle_clean_path]
gcode:
	G0 Y+60 F9000				#scrub
	G0 Y-60 F9000				#scrub

#	Where to start the nozzle brush cleaning pattern  	
[gcode_macro nozzle_brush_location]
gcode:
	G0 X360 Y90 Z25.0 F18000			#move to nozzle scrubber

#	Home switch location 	
[gcode_macro home_switch_location]
gcode:
	G0 X357.5 Y32 F6000		#microswitch location

#	Macro for M600 - filament out pause resume 
[gcode_macro M600]
default_parameter_X: 10
default_parameter_Y: 10
default_parameter_Z: 10
gcode:
	{% if printer.toolhead.status == "Ready" %}
		# do nothing
	{% else %}
    	M117 Filament Change
		SAVE_GCODE_STATE NAME=M600_state
    	PAUSE
		G91
		G1 E-5 F4000
		G1 Z{Z}
		G90
		G1 X{X} Y{Y} F3000
		G0 E15 F1800			#extrude filament to get better blob on end
		G0 E-500 F4800  		#retract additional filament to move out of melt zone
		RESTORE_GCODE_STATE NAME=M600_state
	{% endif %}

#	Use this command to load filament during a mid print filament swap	
[gcode_macro SWAP_RESUME] 
gcode:
 	M117 Printing...
	LOAD_FILAMENT
	RESUME

#	Macro to Deploy Mesh Bed Leveling Probe
[gcode_macro M401]
gcode:
	G90                       ;absolute position
	G1 Z20 F1800              ;drop Z to Z20
	G1 X352 Y294 F12000        ;move toolhead to above probe dock
	G1 Z4.05 F600             ;lower z axis ontop of probe
	G1 Y350 F1200             ;remove probe from dock
	G1 Z20 F1800              ;drop Z to Z20
	G1 X175 Y50 F12000         ;move toolhead to front center of bed


#	Macro to Stow Mesh Bed Leveling Probe
[gcode_macro M402]
gcode:
	G90                       ;absolute position
	G1 Z20 F1800              ;drop Z to Z20
	G1 X352 Y350 F12000        ;move toolhead near entrance of probe dock
	G1 Z4.05 F1800            ;lower z axis to match height of entrance to probe dock
	G1 Y294 F1200             ;insert probe into dock
	G1 Z20 F1800              ;drop Z to Z20
	G1 X175 Y50 F12000         ;move toolhead to front center of bed

#	Macro to Turn Fans Off
[gcode_macro turn_fans_off]
gcode:
	M107

#	Redefine M204 gcode to properly accel_to_decel when called instead of keeping default through the print
[gcode_macro M204]
rename_existing: M204.1
gcode:

   {% if 'P' in params %}{% set accel = params.P %}{% endif %}
   {% if 'S' in params %}{% set accel = params.S %}{% endif %}
   {% if 'T' in params %}{% set accel = params.T %}{% endif %}

    SET_VELOCITY_LIMIT ACCEL={ accel } ACCEL_TO_DECEL={ accel|float / 2.0}

#	Macro to turn bed heater off during probing
[gcode_macro bed_off_probe]
variable_bed_temp: 0
gcode:

#	Macro to Babystep Up 0.01mm
[gcode_macro babystep_up3]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

#	Macro to Babystep Down 0.01mm
[gcode_macro babystep_down3]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1
	
#	Macro to Babystep Up 0.02mm
[gcode_macro babystep_up]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=0.02 MOVE=1

#	Macro to Babystep Down 0.02mm
[gcode_macro babystep_down]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=-0.02 MOVE=1
	
#	Macro to Babystep Up 0.05mm
[gcode_macro babystep_up2]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=0.05 MOVE=1

#	Macro to Babystep Down 0.05mm
[gcode_macro babystep_down2]
gcode:
	SET_GCODE_OFFSET Z_ADJUST=-0.05 MOVE=1
	
#	Macro to Turn Chamber Lighting Off
[gcode_macro chamber_lighting_off]
gcode:
	SET_PIN PIN=chamber_lighting VALUE=0
	
#	Macro to Turn Chamber Lighting On
[gcode_macro chamber_lighting_on]
gcode:
	SET_PIN PIN=chamber_lighting VALUE=1